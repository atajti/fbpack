\name{search_fb}
\alias{search_fb}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
%%  ~~function to do ... ~~
}
\description{
%%  ~~ A concise (1-5 lines) description of what the function does. ~~
}
\usage{
search_fb(x, login_name, login_password, type = c("all", "users", "pages", "places", "groups", "apps", "events"), number_of_results = 5, location, workplace, education)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{x}{
%%     ~~Describe \code{x} here~~
}
  \item{login_name}{
%%     ~~Describe \code{login_name} here~~
}
  \item{login_password}{
%%     ~~Describe \code{login_password} here~~
}
  \item{type}{
%%     ~~Describe \code{type} here~~
}
  \item{number_of_results}{
%%     ~~Describe \code{number_of_results} here~~
}
  \item{location}{
%%     ~~Describe \code{location} here~~
}
  \item{workplace}{
%%     ~~Describe \code{workplace} here~~
}
  \item{education}{
%%     ~~Describe \code{education} here~~
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (x, login_name, login_password, type = c("all", "users", 
    "pages", "places", "groups", "apps", "events"), number_of_results = 5, 
    location, workplace, education) 
{
    remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444, 
        browserName = "firefox")
    remDr$open()
    remDr$setImplicitWaitTimeout(5000)
    remDr$setTimeout("page load", 10000)
    remDr$navigate("http://www.facebook.com")
    webElem <- remDr$findElement(using = "xpath", "//*/input[@id = 'email']")
    webElem$sendKeysToElement(list(login_name, key = "tab"))
    webElem <- remDr$findElement(using = "xpath", "//*/input[@id = 'pass']")
    webElem$sendKeysToElement(list(login_password, key = "enter"))
    Sys.sleep(2)
    if (length(type) - 1) {
        type <- "users"
    }
    remDr$navigate(paste0("https://www.facebook.com/search/results/?q=", 
        x, "&type=", ifelse(length(type) == 1, type, "users")))
    if (type[1] == "users" & any(!missing(location), !missing(workplace), 
        !missing(education))) {
        inp_flds <- expression(input_fields <- tryCatch({
            remDr$findElements("css selector", "input._58al")
        }, warning = function(w) {
            paste0("Warning:\n", w, "\n Continuing search.")
        }, error = function(e) {
            paste0("Error:\n", e, "\n Continuing search.")
        }))
        if (!missing(location)) {
            location_input <- eval(inp_flds)[[1]]
            tryCatch({
                try(location_input$sendKeysToElement(list(location)))
                Sys.sleep(0.5)
                location_input$sendKeysToElement(list(key = "down_arrow"))
                Sys.sleep(0.5)
                location_input$sendKeysToElement(list(key = "up_arrow"))
                Sys.sleep(0.5)
                location_input$sendKeysToElement(list(key = "tab"))
                Sys.sleep(0.5)
            }, warning = function(w) {
                warning(paste0("Location may not be used,", " continuing search anyhow.\n\tWarning: ", 
                  w))
            }, error = function(e) {
                warning(paste0("An error occured at location", 
                  " input. Continuing search anyhow.\n\tThis is the original error", 
                  " message: ", e))
            })
        }
        if (!missing(education)) {
            education_input <- eval(inp_flds)[[3]]
            tryCatch({
                try(education_input$sendKeysToElement(list(education)))
                Sys.sleep(0.5)
                education_input$sendKeysToElement(list(key = "down_arrow"))
                Sys.sleep(0.5)
                education_input$sendKeysToElement(list(key = "up_arrow"))
                Sys.sleep(0.5)
                education_input$sendKeysToElement(list(key = "tab"))
                Sys.sleep(0.5)
            }, warning = function(w) {
                warning(paste0("Education may not be used,", 
                  " continuing search anyhow.\n\tWarning: ", 
                  w))
            }, error = function(e) {
                warning(paste0("An error occured at education", 
                  " input. Continuing search anyhow.\n\tThis is the original error", 
                  " message: ", e))
            })
        }
        if (!missing(workplace)) {
            workplace_input <- eval(inp_flds)[[2]]
            tryCatch({
                try(workplace_input$sendKeysToElement(list(workplace)))
                Sys.sleep(0.5)
                workplace_input$sendKeysToElement(list(key = "down_arrow"))
                Sys.sleep(0.5)
                workplace_input$sendKeysToElement(list(key = "up_arrow"))
                Sys.sleep(0.5)
                workplace_input$sendKeysToElement(list(key = "tab"))
                Sys.sleep(0.5)
            }, warning = function(w) {
                warning(paste0("workplace may not be used,", 
                  " continuing search anyhow.\n\tWarning: ", 
                  w))
            }, error = function(e) {
                warning(paste0("An error occured at workplace", 
                  " input. Continuing search anyhow.\n\tThis is the original error", 
                  " message: ", e))
            })
        }
    }
    found_entities <- NULL
    while (length(found_entities) < number_of_results) {
        results <- remDr$findElements("css selector", "a._8o._8s.lfloat._ohe")
        found_entities_tmp <- unlist(sapply(results, function(element) {
            element$getElementAttribute("href")
        }))
        if (length(results) < length(found_entities_tmp)) {
            warning("There may be more links than found entities!")
        }
        found_entities_tmp <- found_entities_tmp[!grepl("l.php", 
            found_entities_tmp)]
        if (length(found_entities_tmp) <= length(found_entities)) {
            break
        }
        else {
            found_entities <- c(found_entities, found_entities_tmp)
            if (length(found_entities) < number_of_results) {
                for (i in 1:30) {
                  tryCatch({
                    remDr$executeScript("window.scrollBy(0,2000)")
                  }, error = function(e) {
                    warning(paste0("An error occured when", "scrolled:\n", 
                      e))
                  }, warning = function(w) {
                    warning(paste0("Warning when scrolling:\n", 
                      w))
                  })
                }
            }
        }
    }
    log_out_element <- remDr$findElement(using = "id", value = "pageLoginAnchor")
    log_out_element$clickElement()
    log_out_form <- remDr$findElement(using = "id", value = "logout_form")
    log_out_form$submitElement()
    remDr$close()
    return(found_entities[1:number_of_results])
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
